// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Applicant {
  id            Int                     @id @default(autoincrement())
  firstName     String                  @map("first_name")
  middleName    String?                 @map("middle_name")
  lastName      String                  @map("last_name")
  nameExtension String?                 @map("name_extension")
  telephoneNo   String?                 @map("telephone_no")
  mobileNo      String?                 @map("mobile_no")
  email         String?                 @map("email")
  birthDate     DateTime                @map("birth_date") @db.Date
  birthPlace    String                  @map("birth_place")
  citizenship   String                  @map("citizenship")
  sex           String                  @map("sex")
  religion      String?                 @map("religion")
  address       String                  @map("address")
  createdAt     DateTime                @default(now()) @map("created_at")
  updatedAt     DateTime                @updatedAt @map("updated_at")
  parents       ApplicantParent[]
  siblings      ApplicantSibling[]
  children      ApplicantChild[]
  spouse        ApplicantSpouse?
  educations    ApplicantEducation[]
  experiences   ApplicantExperience[]
  organizations ApplicantOrganization[]
  skills        ApplicantSkill[]

  @@map("applicants")
}

model ApplicantParent {
  id            Int       @id @default(autoincrement())
  applicantId   Int       @map("applicant_id")
  firstName     String    @map("first_name")
  middleName    String?   @map("middle_name")
  lastName      String    @map("last_name")
  nameExtension String?   @map("name_extension")
  relationship  String    @map("relationship")
  occupation    String?   @map("occupation")
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")
  applicant     Applicant @relation(fields: [applicantId], references: [id], onDelete: Cascade)

  @@map("applicant_parents")
}

model ApplicantSibling {
  id            Int       @id @default(autoincrement())
  applicantId   Int       @map("applicant_id")
  firstName     String    @map("first_name")
  middleName    String?   @map("middle_name")
  lastName      String    @map("last_name")
  nameExtension String?   @map("name_extension")
  relationship  String    @map("relationship")
  occupation    String?   @map("occupation")
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")
  applicant     Applicant @relation(fields: [applicantId], references: [id], onDelete: Cascade)

  @@map("applicant_siblings")
}

model ApplicantChild {
  id            Int       @id @default(autoincrement())
  applicantId   Int       @map("applicant_id")
  firstName     String    @map("first_name")
  middleName    String?   @map("middle_name")
  lastName      String    @map("last_name")
  nameExtension String?   @map("name_extension")
  relationship  String    @map("relationship")
  occupation    String?   @map("occupation")
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")
  applicant     Applicant @relation(fields: [applicantId], references: [id], onDelete: Cascade)

  @@map("applicant_children")
}

model ApplicantSpouse {
  id            Int       @id @default(autoincrement())
  applicantId   Int       @unique @map("applicant_id")
  firstName     String    @map("first_name")
  middleName    String?   @map("middle_name")
  lastName      String    @map("last_name")
  nameExtension String?   @map("name_extension")
  relationship  String    @map("relationship")
  occupation    String?   @map("occupation")
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")
  applicant     Applicant @relation(fields: [applicantId], references: [id], onDelete: Cascade)

  @@map("applicant_spouses")
}

model ApplicantEducation {
  id          Int                       @id @default(autoincrement())
  applicantId Int                       @map("applicant_id")
  level       String                    @map("level")
  school      String                    @map("school")
  address     String                    @map("address")
  yearFrom    String                    @map("year_from")
  yearTo      String                    @map("year_to")
  course      String?                   @map("course")
  createdAt   DateTime                  @default(now()) @map("created_at")
  updatedAt   DateTime                  @updatedAt @map("updated_at")
  applicant   Applicant                 @relation(fields: [applicantId], references: [id], onDelete: Cascade)
  awards      ApplicantEducationAward[]

  @@map("applicant_educations")
}

model ApplicantEducationAward {
  id                   Int                @id @default(autoincrement())
  applicantEducationId Int                @map("applicant_education_id")
  name                 String             @map("name")
  createdAt            DateTime           @default(now()) @map("created_at")
  updatedAt            DateTime           @updatedAt @map("updated_at")
  education            ApplicantEducation @relation(fields: [applicantEducationId], references: [id], onDelete: Cascade)

  @@map("applicant_education_awards")
}

model ApplicantExperience {
  id           Int       @id @default(autoincrement())
  applicantId  Int       @map("applicant_id")
  company      String    @map("company")
  address      String    @map("address")
  position     String    @map("position")
  salaryAmount Decimal   @map("salary_amount")
  salaryPeriod String    @map("salary_period")
  dateFrom     DateTime  @map("date_from") @db.Date
  dateTo       DateTime? @map("date_to") @db.Date
  isCurrent    Boolean   @default(false) @map("is_current")
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime  @updatedAt @map("updated_at")
  applicant    Applicant @relation(fields: [applicantId], references: [id], onDelete: Cascade)

  @@map("applicant_experiences")
}

model ApplicantOrganization {
  id          Int       @id @default(autoincrement())
  applicantId Int       @map("applicant_id")
  name        String    @map("name")
  address     String    @map("address")
  position    String    @map("position")
  dateFrom    DateTime  @map("date_from") @db.Date
  dateTo      DateTime? @map("date_to") @db.Date
  isCurrent   Boolean   @default(false) @map("is_current")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  applicant   Applicant @relation(fields: [applicantId], references: [id], onDelete: Cascade)

  @@map("applicant_organizations")
}

model ApplicantSkill {
  id          Int       @id @default(autoincrement())
  applicantId Int       @map("applicant_id")
  name        String    @map("name")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  applicant   Applicant @relation(fields: [applicantId], references: [id], onDelete: Cascade)

  @@map("applicant_skills")
}

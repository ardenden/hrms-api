// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Applicant {
  id            Int                @id @default(autoincrement())
  firstName     String             @map("first_name")
  middleName    String?            @map("middle_name")
  lastName      String             @map("last_name")
  nameExtension String?            @map("name_extension")
  telephoneNo   String?            @map("telephone_no")
  mobileNo      String?            @map("mobile_no")
  email         String?            @map("email")
  birthDate     DateTime           @map("birth_date") @db.Date
  birthPlace    String             @map("birth_place")
  citizenship   String             @map("citizenship")
  sex           String             @map("sex")
  religion      String?            @map("religion")
  address       String             @map("address")
  createdAt     DateTime           @default(now()) @map("created_at")
  updatedAt     DateTime           @updatedAt @map("updated_at")
  parents       ApplicantParent[]
  siblings      ApplicantSibling[]
  children      ApplicantChild[]
  spouse        ApplicantSpouse?

  @@map("applicants")
}

model ApplicantParent {
  id            Int       @id @default(autoincrement())
  applicantId   Int       @map("applicant_id")
  firstName     String    @map("first_name")
  middleName    String?   @map("middle_name")
  lastName      String    @map("last_name")
  nameExtension String?   @map("name_extension")
  relationship  String    @map("relationship")
  occupation    String?   @map("occupation")
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")
  applicant     Applicant @relation(fields: [applicantId], references: [id])

  @@map("applicant_parents")
}

model ApplicantSibling {
  id            Int       @id @default(autoincrement())
  applicantId   Int       @map("applicant_id")
  firstName     String    @map("first_name")
  middleName    String?   @map("middle_name")
  lastName      String    @map("last_name")
  nameExtension String?   @map("name_extension")
  relationship  String    @map("relationship")
  occupation    String?   @map("occupation")
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")
  applicant     Applicant @relation(fields: [applicantId], references: [id])

  @@map("applicant_siblings")
}

model ApplicantChild {
  id            Int       @id @default(autoincrement())
  applicantId   Int       @map("applicant_id")
  firstName     String    @map("first_name")
  middleName    String?   @map("middle_name")
  lastName      String    @map("last_name")
  nameExtension String?   @map("name_extension")
  relationship  String    @map("relationship")
  occupation    String?   @map("occupation")
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")
  applicant     Applicant @relation(fields: [applicantId], references: [id])

  @@map("applicant_children")
}

model ApplicantSpouse {
  id            Int       @id @default(autoincrement())
  applicantId   Int       @unique @map("applicant_id")
  firstName     String    @map("first_name")
  middleName    String?   @map("middle_name")
  lastName      String    @map("last_name")
  nameExtension String?   @map("name_extension")
  occupation    String?   @map("occupation")
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")
  applicant     Applicant @relation(fields: [applicantId], references: [id])

  @@map("applicant_spouses")
}
